server:
  port: 8081
  servlet:
    context-path: /

spring:
  application:
    name: book-service

  cloud:
    config:
      enabled: false
      uri: http://localhost:8888
      fail-fast: true
      retry:
        initial-interval: 1000
        max-interval: 2000
        max-attempts: 6

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/bookstore_book_db
    username: postgres
    password: quanghieu2512
    driver-class-name: org.postgresql.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: none
    #      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # Flyway Configuration
  flyway:
    enabled: false
    baseline-on-migrate: true
    locations: classpath:db/migration
    table: flyway_schema_history

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379

  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      book-events: book-events

# Eureka Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    hostname: localhost

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true

# Logging Configuration
logging:
  level:
    com.bookstore: INFO
    org.springframework: INFO
    org.hibernate: INFO