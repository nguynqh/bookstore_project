server:
  port: 8086

spring:
  application:
    name: payment-service

  datasource:
    url: jdbc:postgresql://localhost:5432/bookstore_payment_db
    username: postgres
    password: quanghieu2512
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: payment-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.bookstore.*
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Service endpoints
service:
  order-service:
    url: http://localhost:8082/api
  inventory-service:
    url: http://localhost:8084/api

# Kafka topics
kafka:
  topics:
    order-created: order-created-topic
    payment-completed: payment-completed-topic

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.bookstore.paymentservice: INFO
    org.springframework: WARN